import{ansi4ToAnsi3,ansi8ToAnsi4,hslToRgb,rgbToAnsi8}from"./conversions.js";import{config,reloadFunctions,reloadStyles}from"./index.js";import{clamp,crayonError}from"./util.js";const fourBitColors={black:"[30m",lightBlack:"[90m",red:"[31m",lightRed:"[91m",green:"[32m",lightGreen:"[92m",yellow:"[33m",lightYellow:"[93m",blue:"[34m",lightBlue:"[94m",magenta:"[35m",lightMagenta:"[95m",cyan:"[36m",lightCyan:"[96m",white:"[37m",lightWhite:"[97m"};for(const a in fourBitColors){const b=fourBitColors[a];const c=/[0-9][0-9]/.exec(b);if(c){const d=a[0].toUpperCase()+a.slice(1);const e=c[0];Reflect.set(fourBitColors,`bg${d}`,b.replace(e,String(parseInt(e)+10)))}}const attributes={reset:"[0m",bold:"[1m",dim:"[2m",italic:"[3m",underline:"[4m",blink:"[5m",fastBlink:"[6m",invert:"[7m",hidden:"[8m",strikethrough:"[9m",boldOff:"[21m",doubleUnderline:"[21m",boldOrDimOff:"[22m",italicOff:"[23m",underlineOff:"[24m",blinkOff:"[25m",invertOff:"[26m",hiddenOff:"[27m",strikethroughOff:"[28m"};const functions={keyword(n){const t=styles[n];return t||(crayonError("Invalid keyword given in keyword function"),"")},ansi3(n,t){return("number"!=typeof n||7<n||n<0)&&crayonError("Invalid usage of ansi3 function, syntax: 0-7"),config.colorSupport.threeBitColor?`\x1b[${(t?40:30)+clamp(n,0,7)}m`:""},ansi4(n,t){return("number"!=typeof n||15<n||n<0)&&crayonError("Invalid usage of ansi4 function, syntax: 0-15"),config.colorSupport.fourBitColor?`\x1b[${clamp(n,0,15)+(t?10:0)+(7<n?82:30)}m`:functions.ansi3(ansi4ToAnsi3(n),t)},ansi8(n,t){return("number"!=typeof n||255<n||n<0)&&crayonError("Invalid usage of ansi8 function, syntax: 0-255"),config.colorSupport.highColor?`\x1b[${t?48:38};5;${clamp(n,0,255)}m`:functions.ansi4(ansi8ToAnsi4(n),t)},rgb(n,t,o,r){return("number"!=typeof n||"number"!=typeof t||"number"!=typeof o||255<n||n<0||255<t||t<0||255<o||o<0)&&crayonError("Invalid usage of rgb function, syntax: r: 0-255, g: 0-255, b: 0-255"),config.colorSupport.trueColor?`\x1b[${r?48:38};2;${n};${t};${o}m`:functions.ansi8(rgbToAnsi8(n,t,o),r)},hsl(n,t,o,r){("number"!=typeof n||"number"!=typeof t||"number"!=typeof o||360<n||n<0||100<t||t<0||100<o||o<0)&&crayonError("Incorrect usage of hsl function, syntax: h: 0-360, s: 0-100, l: 0-100");const e=hslToRgb(n,t,o);return config.colorSupport.trueColor?functions.rgb(...e,r):functions.ansi8(rgbToAnsi8(...e),r)},hex(n,t,o){if(/#[0-F]{6}/.test(n)){const r=(n=n.slice(1)).match(/.{2}/g);const e=r.map(n=>parseInt(n,16));return t?functions.ansi8(rgbToAnsi8(...e),o):functions.rgb(...e,o)}return crayonError('Incorrect usage of hex function, syntax: "#[0-F]{6}"'),""},bgHex(n,t){return functions.hex(n,t,!0)}};const styles={};Object.assign(styles,attributes,fourBitColors);const addStyleFunction=(n,t)=>{const o=Reflect.set(functions,n,t);return o&&reloadFunctions(),o};const addStyleAlias=(n,t)=>{const o=styles[t];if(!o)return crayonError(`Could not find style "${t}"`),!1;const r=Reflect.set(styles,n,o);return r&&reloadStyles(),r};const addStyleAliases=t=>{let o=!0;for(let n in t){const r=t[n];const e=styles[r];e||(crayonError(`Could not find style "${r}"`),o=!1),o=o&&Reflect.set(styles,n,e)}return o&&reloadStyles(),o};const addStyle=(n,t)=>{const o=Reflect.set(styles,n,t);return o?(reloadStyles(),!0):crayonError(`Failed adding ${n} style`)};const addStyles=n=>{try{return Object.assign(styles,n),reloadStyles(),!0}catch(n){return crayonError(`Failed adding styles:\n${n}`)}};export{fourBitColors,attributes,functions,styles,addStyleFunction,addStyleAlias,addStyleAliases,addStyle,addStyles};