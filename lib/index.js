import{colorSupport,functions,styles,addStyleAlias,addStyleFunction,addStyle,addStyles,addStyleAliases}from"./styles.js";import{errorConfig}from"./util.js";import{getColorSupport}from"./support.js";const config=new Proxy({colorSupport:colorSupport,optimizeStyles:{chain:!1,literal:!1},errors:errorConfig},{});const optimizeStyles=t=>t.replace(/(\x1b\[([0-9]|;|)+?m)+\x1b\[0m/,styles.reset);const crayonPrototype={styleCache:"",preserveCache:!1,config:config,colorSupport:colorSupport,instance(t,e){return buildCrayon(t,e)},clone(t,e){return buildCrayon(this.preserveCache,(t?this.clearCache():this.styleCache)+(e||""))},clearCache(){const t=this.styleCache;return this.preserveCache||(this.styleCache=""),t},strip(t){return t.replace(/\x1b\[[0-9]([0-9])?([0-9])?m/gi,"")}};for(const h in styles)Object.defineProperty(crayonPrototype,h,{get(){return this.clone(!0,styles[h])}});for(const i in functions)if(!i.startsWith("bg")){const j=`bg${i[0].toUpperCase()+i.slice(1)}`;const k=functions[i];let r=!1;const m=functions[j]||(r=!0,functions[i]);Object.defineProperties(crayonPrototype,{[i]:{value(...t){const e=k(...t);return""!==e?this.clone(!0,e):this}},[j]:{value(...t){r&&t.push(!0);const e=m(...t);return""!==e?this.clone(!0,e):this}}})}const buildCrayon=(t,e)=>{const o=function(...t){if(!t.length)return buildCrayon(!0);if(Array.isArray(t[0].raw)){const s=compileLiteral(...t);return o.config.optimizeStyles.literal?optimizeStyles(s):s}const e=String(t.join(" "));const r=o.clearCache();if(!r)return e;const s=r+e.replace(resetRegex,styles.reset+r)+styles.reset;return o.config.optimizeStyles.chain?optimizeStyles(s):s};return Object.setPrototypeOf(o,crayonPrototype),o.preserveCache=!!t,o.styleCache=e||"",o};const resetRegex=/\x1b\[0m/gi;const literalStyleRegex=/{([^\s]+\s)([^{}]+)}/;const literalFuncRegex=/(\w+)\((.*)\)/;const literalStringRegex=/^("|'|`)(.*)\1$/;const compileLiteral=(...t)=>{const e=t.slice(1);const r=[...t[0]];let s="";for(;e.length||r.length;)r.length&&(s+=r.shift()),e.length&&(s+=e.shift());let o=s.match(literalStyleRegex);for(;null!==o&&void 0!==o&&o.length;){const n=o[1].trimEnd().split(".").map(t=>{const e=styles[t];if(e)return e;{const r=t.match(literalFuncRegex);if(null!==r&&void 0!==r&&r.length){const s=r[1];const o=r[2].split(",").map(t=>{const e=t.match(literalStringRegex);if(null!=e&&e.length)return e[2];const r=Number(t);return r||("false"===t||"true"===t?Boolean(t):t)});if(s.startsWith("bg")){const n=s[2].toLowerCase()+s.replace("bg","").substr(1);const l=functions[s]||(o.push(!0),functions[n]);if(l)return l(...o)}else{const c=functions[s];if(c)return c(...o)}}}}).join("");const l=o[2].split(styles.reset).join(styles.reset+n);s=s.replace(o[0],n+l+styles.reset),o=s.match(literalStyleRegex)}return s};const crayonInstance=buildCrayon(!1);export default crayonInstance;export{crayonInstance as crayon,addStyleFunction,getColorSupport,addStyleAliases,optimizeStyles,addStyleAlias,addStyles,addStyle,colorSupport,functions,styles};